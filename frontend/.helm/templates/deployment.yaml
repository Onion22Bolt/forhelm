apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include ".helm.selectorLabels" . | nindent 8 }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: {{ .Values.spec.serviceAccountName }}
      securityContext:
        {{- toYaml .Values.securityContext1 | nindent 8 }}
      containers:
        - name: {{ .Values.container.name }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext2.allowPrivilegeEscalation }}
            capabilities:
              drop:
                - all
            privileged: {{ .Values.securityContext2.privileged }}
            readOnlyRootFilesystem: {{ .Values.securityContext2.readOnlyRootFilesystem }}
          image: {{ .Values.image.repository | quote }}
          ports:
          - containerPort: {{ .Values.service.targetport }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
            httpGet:
              path: "/_healthz"
              port: {{ .Values.service.targetport }}
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
            httpGet:
              path: "/_healthz"
              port: {{ .Values.service.targetport }}
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: {{ .Values.env.name }}
            value: "{{ .Values.service.targetport }}"
          - name: {{ .Values.env.name1 }}
            value: "{{ .Values.env.value1 }}"
          - name: {{ .Values.env.name2 }}
            value: "{{ .Values.env.value2 }}"
          - name: {{ .Values.env.name3 }}
            value: "{{ .Values.env.value3 }}"
          - name: {{ .Values.env.name4 }}
            value: "{{ .Values.env.value4 }}"
          - name: {{ .Values.env.name5 }}
            value: "{{ .Values.env.value5 }}"
          - name: {{ .Values.env.name6 }}
            value: "{{ .Values.env.value6 }}"
          - name: {{ .Values.env.name7 }}
            value: "{{ .Values.env.value7 }}"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp 
          # - name: ENV_PLATFORM 
          #   value: "aws"
          - name: {{ .Values.env.name8 }}
            value: "{{ .Values.env.value8 }}"
          # - name: CYMBAL_BRANDING
          #   value: "true"
          resources:
            requests:
              {{- toYaml .Values.requests | nindent 14 }}
            limits:
              {{- toYaml .Values.limits | nindent 14 }}


